import de.frosner.dds.core.DDS._

start

val sql = new org.apache.spark.sql.SQLContext(sc)
val sqlGolf = de.frosner.dds.datasets.golf(sc, sql)
val sqlFlights = de.frosner.dds.datasets.flights(sc, sql)
val golf = de.frosner.dds.datasets.golf(sc)

line(List(1,2,3))
bar(sqlGolf.select("Play"))
bars(List("Group A", "Group B", "Group C"), List(List(1,2,3), List(2,3,2), List(4,1,2)), List("Product A", "Product B", "Product C"))
graph(List((1, "Frank"), (2, "Daniel"), (3, "Lucas"), (4, "Pietro"), (5, "Marco")), List((1,2,"Friend"), (1,3,"Friend"), (4,5,"Colleague")))
show(sqlGolf)
show(List((2, 3), (3, 4), (3, 1)))
show(sqlFlights.select("Carrier"))
median(golf.map(_.humidity))
dashboard(sqlFlights.select("Flight Date", "Carrier", "Carrier Delay"))
summarize(sqlFlights.select("Flight Date", "Carrier", "Carrier Delay"))
heatmap(List(List(1d,2d), List(3d,Double.NaN)))
correlation(sqlGolf)
mutualInformation(sqlGolf)
histogram(sqlGolf.select("Humidity"))
pie(sqlGolf.select(sqlGolf("Outlook")))
